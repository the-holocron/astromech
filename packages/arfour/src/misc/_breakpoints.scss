@use "sass:list";
@use "sass:map";

////
/// @author Mark Otto
////

/// Name of the next breakpoint, or null for the last breakpoint.
/// Breakpoints are defined as a map of (name: minimum width), order from small to large:
///    (xs: 0, sm: 34rem, md: 45rem)
///
/// The map defined in the `$grid-breakpoints` global variable is used as the `$breakpoints` argument by default.
/// @since 0.1.0
/// @param {String} $name - the name for the breakpoint
/// @param {Map} $breakpoints - a map of grid breakpoints
/// @param {List} $breakpoint-names [map-keys($breakpoints)] - a list of names for breakpoints when passed a map of breakpoints
/// @return {String} the name of next breakpoint when passed a map of breakpoints
/// @example scss
///    @include breakpoint-next(sm)
///    // md
///    @include breakpoint-next(sm, $breakpoints: (xs: 0, sm: 34rem, md: 45rem))
///    // md
///    @include breakpoint-next(sm, $breakpoint-names: (xs sm md))
///    // md
@function next($name, $breakpoints, $breakpoint-names: map.keys($breakpoints)) {
	$n: list.index($breakpoint-names, $name);

	@return if($n < list.length($breakpoint-names), list.nth($breakpoint-names, $n + 1), null);
}

/// Minimum breakpoint width
/// @since 0.1.0
/// @param {String} $name - the name for the breakpoint
/// @param {Map} $breakpoints - a map of grid breakpoints
/// @return {Number | null } the minimum value is calculated as the minimum of the next one or `null` for the smallest (first) breakpoint
/// @example scss
///    @include breakpoint-min(sm, (xs: 0, sm: 34rem, md: 45rem))
///    // 34rem
@function min-width($name, $breakpoints) {
	$min: map.get($breakpoints, $name);

	@return if($min != 0, $min, null);
}

/// Maximum breakpoint width.
/// @since 0.1.0
/// @param {String} $name - the name for the breakpoint
/// @param {Map} $breakpoints - a map of grid breakpoints
/// @return {Number | null } the maximum value is calculated as the minimum of the next one less 0.1 or `null` for the largest (last) breakpoint.
/// @example scss
///    @include breakpoint-max(sm, (xs: 0, sm: 34rem, md: 45rem))
///    // 44.9rem
@function max-width($name, $breakpoints) {
	$next: next($name, $breakpoints);

	@return if($next, min-width($next, $breakpoints) - .02, null);
}

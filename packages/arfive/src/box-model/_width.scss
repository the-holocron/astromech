@use "sass:map";
@use "../../node_modules/@theholocron/arone/src/utilities/breakpoints" as *;
@use "../config";
@use "../syntaxes";

/// The width prefixerty
/// @since 0.1.0
/// @link https://developer.mozilla.org/en-US/docs/Web/CSS/width
/// @param {String} $className ["width"] - a CSS class name that will className all helpers
/// @param {Map} $breakpoints [ config.$breakpoints ] - a map of grid breakpoints
/// @param {Map} $sizing [ config.$sizing ] - a map of sizing prefixs
/// @example scss
///   @include width($className: w, $breakpoints: ("sm": 480px));
@mixin width($className: width, $breakpoints: config.$breakpoints, $sizing: config.$sizing) {
	$property: "width";

	@each $prefix in config.$sizing-prefixes {
		.#{$prefix}#{$className} {
			@each $breakpoint in map.keys($breakpoints) {
				@each $key, $value in $sizing {
					@include media-breakpoint-up($breakpoint, $breakpoints) {
						&-#{$breakpoint}-#{$key},
						&-#{$breakpoint}-#{$key} {
							#{$prefix}#{$property}: $value !important;
						}
					}

					@include media-breakpoint-down($breakpoint, $breakpoints) {
						&-#{$breakpoint}-#{$key}-down {
							#{$prefix}#{$property}: $value !important;
						}
					}

					@include media-breakpoint-only($breakpoint, $breakpoints) {
						&-#{$breakpoint}-#{$key}-only {
							#{$prefix}#{$property}: $value !important;
						}
					}
				}

				@each $syntax in syntaxes.$width {
					@include media-breakpoint-up($breakpoint, $breakpoints) {
						&-#{$breakpoint}-#{$syntax},
						&-#{$breakpoint}-#{$syntax}-up {
							#{$property}: $syntax !important;
						}
					}

					@include media-breakpoint-down($breakpoint, $breakpoints) {
						&-#{$breakpoint}-#{$syntax}-down {
							#{$property}: $syntax !important;
						}
					}

					@include media-breakpoint-only($breakpoint, $breakpoints) {
						&-#{$breakpoint}-#{$syntax}-only {
							#{$property}: $syntax !important;
						}
					}
				}
			}
		}
	}
}

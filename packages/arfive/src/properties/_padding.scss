/* stylelint-disable declaration-no-important, plugin/stylelint-selector-no-empty */
////
/// @author Mark Otto
////

/// Assign responsive-friendly `padding` or `padding` values to an element or a subset of its sides with shorthand classes. Includes support for individual properties, all properties, and vertical and horizontal properties.
///
/// #### Notation
///
/// The classes are named using the format `{property}-{sides}-{size}`.
///
/// Where *property* is one of:
///
/// * `m` - for classes that set `padding`
/// * `p` - for classes that set `padding`
///
/// Where *sides* is one of:
///
/// * `t` - for classes that set `padding-top` or `padding-top`
/// * `b` - for classes that set `padding-bottom` or `padding-bottom`
/// * `l` - for classes that set `padding-left` or `padding-left`
/// * `r` - for classes that set `padding-right` or `padding-right`
/// * `x` - for classes that set both `*-left` and `*-right`
/// * `y` - for classes that set both `*-top` and `*-bottom`
/// * `a` - for classes that set a `padding` or `padding` on all 4 sides of the element
///
/// Where *size* is one of:
///
/// * `0` - for classes that eliminate the `padding` or `padding` by setting it to `0`
/// * `qtr` - (by default) for classes that set the `padding` or `padding` to `$spacer * .25`
/// * `half` - (by default) for classes that set the `padding` or `padding` to `$spacer * .5`
/// * `1` - (by default) for classes that set the `padding` or `padding` to `$spacer`
/// * `2` - (by default) for classes that set the `padding` or `padding` to `$spacer * 1.5`
/// * `3` - (by default) for classes that set the `padding` or `padding` to `$spacer * 3`
/// * `auto` - for classes that set the `padding` to auto
///
/// (You can add more sizes by adding entries to the `$spacers` Sass map variable.)
/// @name {property}-{sides}-{size}
/// @since 0.1.0 - The O.G.
/// @example html
/// <span class="p-t-qtr bg-gray-lighter">.p-t-qtr</span>
/// <span class="p-t-half bg-gray-lighter">.p-t-half</span>
/// <span class="p-t-1 bg-gray-lighter">.p-t-1</span>
/// <span class="p-t-2 bg-gray-lighter">.p-t-2</span>
/// <span class="p-t-3 bg-gray-lighter">.p-t-3</span>
/// <span class="p-b-qtr bg-gray-lighter">.p-b-qtr</span>
/// <span class="p-b-half bg-gray-lighter">.p-b-half</span>
/// <span class="p-b-1 bg-gray-lighter">.p-b-1</span>
/// <span class="p-b-2 bg-gray-lighter">.p-b-2</span>
/// <span class="p-b-3 bg-gray-lighter">.p-b-3</span>
/// <div class="m-y-3 spacer"></div>
/// <span class="m-r-qtr bg-gray-lighter">.m-r-qtr</span>
/// <span class="m-r-half bg-gray-lighter">.m-r-half</span>
/// <span class="m-r-1 bg-gray-lighter">.m-r-1</span>
/// <span class="m-r-2 bg-gray-lighter">.m-r-2</span>
/// <span class="m-r-3 bg-gray-lighter">.m-r-3</span>
/// <span class="m-l-qtr bg-gray-lighter">.m-l-qtr</span>
/// <span class="m-l-half bg-gray-lighter">.m-l-half</span>
/// <span class="m-l-1 bg-gray-lighter">.m-l-1</span>
/// <span class="m-l-2 bg-gray-lighter">.m-l-2</span>
/// <span class="m-l-3 bg-gray-lighter">.m-l-3</span>
@mixin padding($prefix: padding, $breakpoints: config.$breakpoints) {
	.#{$prefix} {
		@each $prop in (top, right, bottom, left) {
			@each $key, $value in map-merge((auto: auto), (0: 0), config.$spacers) {
				@each $breakpoint in map-keys($breakpoints) {
					@include media-breakpoint-up($breakpoint, $breakpoints) {
						&-#{$prop}-#{$breakpoint}-#{$value},
						&-#{$prop}-#{$breakpoint}-#{$value}-up {
							padding-#{$prop}: $value !important;
						}

						&-#{$prop}-#{$breakpoint}-minus-#{$value},
						&-#{$prop}-#{$breakpoint}-minus-#{$value}-up {
							padding-#{$prop}: -$value !important;
						}

						&-x-#{$breakpoint}-#{$value},
						&-x-#{$breakpoint}-#{$value}-up,
						&-xaxis-#{$breakpoint}-#{$value},
						&-xaxis-#{$breakpoint}-#{$value}-up {
							padding-right: $value !important;
							padding-left: $value !important;
						}

						&-x-#{$breakpoint}-minus-#{$value},
						&-x-#{$breakpoint}-minus-#{$value}-up,
						&-xaxis-#{$breakpoint}-minus-#{$value},
						&-xaxis-#{$breakpoint}-minus-#{$value}-up {
							padding-right: -$value !important;
							padding-left: -$value !important;
						}

						&-y-#{$breakpoint}-#{$value},
						&-y-#{$breakpoint}-#{$value}-up,
						&-yaxis-#{$breakpoint}-#{$value},
						&-yaxis-#{$breakpoint}-#{$value}-up {
							padding-top: $value !important;
							padding-bottom: $value !important;
						}

						&-y-#{$breakpoint}-minus-#{$value},
						&-y-#{$breakpoint}-minus-#{$value}-up,
						&-yaxis-#{$breakpoint}-minus-#{$value},
						&-yaxis-#{$breakpoint}-minus-#{$value}-up {
							padding-top: -$value !important;
							padding-bottom: -$value !important;
						}

						&-a-#{$breakpoint}-#{$value},
						&-a-#{$breakpoint}-#{$value}-up,
						&-all-#{$breakpoint}-#{$value},
						&-all-#{$breakpoint}-#{$value}-up {
							padding: $value !important;
						}

						&-a-#{$breakpoint}-minus-#{$value},
						&-a-#{$breakpoint}-minus-#{$value}-up,
						&-all-#{$breakpoint}-minus-#{$value},
						&-all-#{$breakpoint}-minus-#{$value}-up {
							padding: -$value !important;
						}
					}

					@include media-breakpoint-down($breakpoint, $breakpoints) {
						&-#{$prop}-#{$breakpoint}-#{$value}-down {
							padding-#{$prop}: $value !important;
						}

						&-#{$prop}-#{$breakpoint}-minus-#{$value}-down {
							padding-#{$prop}: -$value !important;
						}

						&-x-#{$breakpoint}-#{$value}-down,
						&-xaxis-#{$breakpoint}-#{$value}-down {
							padding-right: $value !important;
							padding-left: $value !important;
						}

						&-x-#{$breakpoint}-minus-#{$value}-down,
						&-xaxis-#{$breakpoint}-minus-#{$value}-down {
							padding-right: -$value !important;
							padding-left: -$value !important;
						}

						&-y-#{$breakpoint}-#{$value}-down,
						&-yaxis-#{$breakpoint}-#{$value}-down {
							padding-top: $value !important;
							padding-bottom: $value !important;
						}

						&-y-#{$breakpoint}-minus-#{$value}-down,
						&-yaxis-#{$breakpoint}-minus-#{$value}-down {
							padding-top: -$value !important;
							padding-bottom: -$value !important;
						}

						&-a-#{$breakpoint}-#{$value}-down,
						&-all-#{$breakpoint}-#{$value}-down {
							padding: $value !important;
						}

						&-a-#{$breakpoint}-minus-#{$value}-down,
						&-all-#{$breakpoint}-minus-#{$value}-down {
							padding: -$value !important;
						}
					}

					@include media-breakpoint-only($breakpoint, $breakpoints) {
						&-#{$prop}-#{$breakpoint}-#{$value}-only {
							padding-#{$prop}: $value !important;
						}

						&-#{$prop}-#{$breakpoint}-minus-#{$value}-only {
							padding-#{$prop}: -$value !important;
						}

						&-x-#{$breakpoint}-#{$value}-only,
						&-xaxis-#{$breakpoint}-#{$value}-only {
							padding-right: $value !important;
							padding-left: $value !important;
						}

						&-x-#{$breakpoint}-minus-#{$value}-only,
						&-xaxis-#{$breakpoint}-minus-#{$value}-only {
							padding-right: -$value !important;
							padding-left: -$value !important;
						}

						&-y-#{$breakpoint}-#{$value}-only,
						&-yaxis-#{$breakpoint}-#{$value}-only {
							padding-top: $value !important;
							padding-bottom: $value !important;
						}

						&-y-#{$breakpoint}-minus-#{$value}-only,
						&-yaxis-#{$breakpoint}-minus-#{$value}-only {
							padding-top: -$value !important;
							padding-bottom: -$value !important;
						}

						&-a-#{$breakpoint}-#{$value}-only,
						&-all-#{$breakpoint}-#{$value}-only {
							padding: $value !important;
						}

						&-a-#{$breakpoint}-minus-#{$value}-only,
						&-all-#{$breakpoint}-minus-#{$value}-only {
							padding: -$value !important;
						}
					}
				}
			}
		}
	}
}

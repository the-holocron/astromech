@use "../config";

/// The clear property
/// @since 0.1.0
/// @link https://developer.mozilla.org/en-US/docs/Web/CSS/clear
/// @param {String} $prefix ["clear"] - a CSS class name that will prefix all helpers
/// @param {Map} $breakpoints [ config.$breakpoints ] - a map of grid breakpoints
/// @example scss
///   @include clear($prefix: c, $breakpoints: ("sm": 480px));
@mixin clear($prefix: clear, $breakpoints: config.$breakpoints) {
	.#{$prefix} {
		@each $prop in (both, left, none, right) {
			@each $breakpoint in map-keys($breakpoints) {
				@include media-breakpoint-up($breakpoint, $breakpoints) {
					&-#{$breakpoint}-#{$prop},
					&-#{$breakpoint}-#{$prop}-up {
						clear: $prop !important;
					}
				}

				@include media-breakpoint-down($breakpoint, $breakpoints) {
					&-#{$breakpoint}-#{$prop}-down {
						clear: $prop !important;
					}
				}

				@include media-breakpoint-only($breakpoint, $breakpoints) {
					&-#{$breakpoint}-#{$prop}-only {
						clear: $prop !important;
					}
				}
			}
		}

	////
	/// @author Nicolas Gallagher
	////

	/// Clearfix
	/// For modern browsers
	/// 1. The space content is one way to avoid an Opera bug when the
	///    `contenteditable` attribute is included anywhere else in the document.
	///    Otherwise it causes space to appear at the top and bottom of elements
	///    that are clearfixed.
	/// 2. The use of `table` rather than `block` is only necessary if using
	///    `::before` to contain the top-margins of child elements.
	/// @link http://nicolasgallagher.com/micro-clearfix-hack/
	/// @example html
	///   <div class="clear-fix">...</div>
		&-fix {
			@supports not (display: flow-root) {
				&::before,
				&::after {
					display: table; // 2
					content: " "; // 1
				}

				&::after {
					clear: both;
				}
			}
			@supports (display: flow-root) {
				display: flow-root;
			}
		}
	}
}

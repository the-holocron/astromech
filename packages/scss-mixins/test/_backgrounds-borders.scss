@use "sass-true/sass/true" as *;
@use "../src/backgrounds-borders" as *;

@include describe("backgrounds & borders") {
	@include describe("background-color") {
		@include it("it should output a background color") {
			@include assert() {

				@include output() {
					@include background-color("test", red, white);
				}

				@include expect() {
					.test {
						background-color: red;
						color: white;
					}

					a.test {
						&:focus,
						&.is-focused,
						&:hover {
							background-color: #ffbfbf;
							text-decoration-color: maroon;
						}
					}
				}
			}
		}

		@include it("it should output a background color with white text as fallback") {
			@include assert() {

				@include output() {
					@include background-color("test", red, red, lightgray);
				}

				@include expect() {
					.test {
						background-color: red;
						color: lightgray;
					}

					a.test {
						&:focus,
						&.is-focused,
						&:hover {
							background-color: #ffbfbf;
							text-decoration-color: maroon;
						}
					}
				}
			}
		}
	}

	@include describe("border-color") {
		@include it("it should output a border-color on all sides when given no input") {
			@include assert() {

				@include output() {
					@include border-color();
				}

				@include expect() {
					border-color: inherit;
				}
			}
		}

		@include it("it should output a border color side when given a side") {
			@include assert() {

				@include output() {
					@include border-color($direction: right, $color: red);
				}

				@include expect() {
					border-right-color: red;
				}
			}
		}
	}

	@include describe("border-radius") {
		@include it("it should output a border radius on all sides given an input") {
			@include assert() {

				@include output() {
					@include border-radius(3px);
				}

				@include expect() {
					border-radius: 3px;
				}
			}
		}

		@include it("it should output a border radius on top sides given an input") {
			@include assert() {

				@include output() {
					@include border-radius(3px, top);
				}

				@include expect() {
					border-top-left-radius: 3px;
					border-top-right-radius: 3px;
				}
			}
		}

		@include it("it should output a border radius on right sides given an input") {
			@include assert() {

				@include output() {
					@include border-radius(3px, right);
				}

				@include expect() {
					border-bottom-right-radius: 3px;
					border-top-right-radius: 3px;
				}
			}
		}

		@include it("it should output a border radius on bottom sides given an input") {
			@include assert() {

				@include output() {
					@include border-radius(3px, bottom);
				}

				@include expect() {
					border-bottom-right-radius: 3px;
					border-bottom-left-radius: 3px;
				}
			}
		}

		@include it("it should output a border radius on left sides given an input") {
			@include assert() {

				@include output() {
					@include border-radius(3px, left);
				}

				@include expect() {
					border-bottom-left-radius: 3px;
					border-top-left-radius: 3px;
				}
			}
		}

		@include it("it should output a border radius on top left side when given a radius") {
			@include assert() {

				@include output() {
					@include border-radius(3px, top-left);
				}

				@include expect() {
					border-top-left-radius: 3px;
				}
			}
		}
		@include it("it should output a border radius on any side when given a radius and direction") {
			@include assert() {

				@include output() {
					@include border-radius(3px, bottom-right);
				}

				@include expect() {
					border-bottom-right-radius: 3px;
				}
			}
		}
	}

	@include describe("border-width") {
		@include it("it should output a border-width on all sides when given no input") {
			@include assert() {

				@include output() {
					@include border-width();
				}

				@include expect() {
					border-width: .0625rem;
				}
			}
		}

		@include it("it should output a border width side when given a side") {
			@include assert() {

				@include output() {
					@include border-width($direction: right, $width: 1rem);
				}

				@include expect() {
					border-right-width: 1rem;
				}
			}
		}
	}

	@include describe("border") {
		@include it("it should output a border on all sides when given no input") {
			@include assert() {

				@include output() {
					@include border();
				}

				@include expect() {
					border: .0625rem solid inherit;
				}
			}
		}

		@include it("it should output a border side when given a side") {
			@include assert() {

				@include output() {
					@include border($direction: right, $color: red, $style: dotted, $width: 1px);
				}

				@include expect() {
					border-right: 1px dotted red;
				}
			}
		}
	}
}
